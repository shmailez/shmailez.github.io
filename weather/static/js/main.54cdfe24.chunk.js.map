{"version":3,"sources":["components/UserLocation.js","components/Navbar.js","App.js","reportWebVitals.js","index.js"],"names":["UserLocation","props","weather","temperature","description","location","region","country","wind_speed","pressure","precip","humidity","img","className","src","alt","Navbar","onSubmit","e","changeLocation","type","placeholder","onChange","changeRegion","target","value","App","state","userPosition","latitude","longitude","regionInput","setState","preventDefault","Axios","get","then","res","userWeather","data","current","weather_descriptions","name","weather_icons","navigator","geolocation","getCurrentPosition","position","pos","coords","this","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.54cdfe24.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport default function UserLocation(props) {\r\n\r\n    const { temperature, description, location, region, country, wind_speed, pressure, precip, humidity, img } = props.weather;\r\n\r\n    return (\r\n        <div className=\"user-weather\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-3 weather-temp\">\r\n                    <h1>{temperature}<sup>o</sup>C , {description}</h1>\r\n                    <h4>{location}</h4>\r\n                    <p>{region} , {country}</p>\r\n                </div>\r\n\r\n                <div className=\"col-md-9\">\r\n                    <img className=\"mainImg\" src={img} alt=\"weather-img\" />\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"row\">\r\n                <div className=\"col-md-3 weather-info\">\r\n                    <p><b>Wind Speed</b>(km/hr)</p>\r\n                    <h2>{wind_speed}</h2>\r\n                </div>\r\n\r\n                <div className=\"col-md-3 weather-info\">\r\n                    <p><b>Preassure</b>(millibar)</p>\r\n                    <h2>{pressure}</h2>\r\n                </div>\r\n\r\n                <div className=\"col-md-3 weather-info\">\r\n                    <p><b>Precipitation</b>(mm)</p>\r\n                    <h2>{precip}</h2>\r\n                </div>\r\n\r\n                <div className=\"col-md-3 weather-info\">\r\n                    <p><b>Humidity</b>(%)</p>\r\n                    <h2>{humidity}</h2>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\n\r\nexport default function Navbar(props) {\r\n\r\n    return (\r\n        <div className=\"row\">\r\n            <div className=\"col-md-6\">\r\n                <h1 className=\"title\">Weather App</h1>\r\n            </div>\r\n\r\n            <div className=\"col-md-6\">\r\n                <form className=\"region\" onSubmit={(e) => { props.changeLocation(e) }}>\r\n                    <input type=\"text\" className=\"regioninput\" placeholder=\"Select your region\" onChange={(e) => { props.changeRegion(e.target.value) }} />\r\n                </form>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}","// import React from 'react';\n// import UserLocation from './components/UserLocation.js';\n// import Navbar from './components/Navbar.js'\n// import Axios from 'axios';\n// import './App.css';\n\n// function App() {\n//   return (\n//     <div className=\"App\">\n      \n//     </div>\n//   );\n// }\n\n// export default App;\n  \nimport React from 'react';\nimport UserLocation from './components/UserLocation.js';\nimport Navbar from './components/Navbar.js'\nimport './App.css';\nimport Axios from 'axios';\n\nclass App extends React.Component {\n\n  //state\n  state = {\n    userPosition: {\n      latitude: 35,\n      longitude: 139\n    },\n    weather: {},\n    regionInput: \"\"\n  }\n\n  componentDidMount() {\n    //check whether geolocation is supported\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(position => {\n\n        //get the lat and long of your device\n        let pos = {\n          latitude: position.coords.latitude,\n          longitude: position.coords.longitude\n        }\n\n        this.setState({ userPosition: pos });\n\n        //Weather Api call\n        Axios.get(`http://api.weatherstack.com/current?access_key=ee2c00a09ba65e4467143d28625d3fa2&query=${this.state.userPosition.latitude},${this.state.userPosition.longitude}`).then(res => {\n\n          let userWeather = {\n            temperature: res.data.current.temperature,\n            description: res.data.current.weather_descriptions[0],\n            location: res.data.location.name,\n            region: res.data.location.region,\n            country: res.data.location.country,\n            wind_speed: res.data.current.wind_speed,\n            pressure: res.data.current.pressure,\n            precip: res.data.current.precip,\n            humidity: res.data.current.humidity,\n            img: res.data.current.weather_icons\n          }\n\n          this.setState({ weather: userWeather });\n        })\n      })\n    }\n  }\n\n  //update the value of the the input field with state\n  changeRegion = (value) => {\n    this.setState({ regionInput: value })\n  }\n\n  //update the weather depending upon the value user entered\n  changeLocation = (e) => {\n\n    e.preventDefault()\n\n    Axios.get(`http://api.weatherstack.com/current?access_key=ee2c00a09ba65e4467143d28625d3fa2&query=${this.state.regionInput}`).then(res => {\n\n      let userWeather = {\n        temperature: res.data.current.temperature,\n        description: res.data.current.weather_descriptions[0],\n        location: res.data.location.name,\n        region: res.data.location.region,\n        country: res.data.location.country,\n        wind_speed: res.data.current.wind_speed,\n        pressure: res.data.current.pressure,\n        precip: res.data.current.precip,\n        humidity: res.data.current.humidity,\n        img: res.data.current.weather_icons\n      }\n\n      this.setState({ weather: userWeather });\n\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"container\">\n          <Navbar changeRegion={this.changeRegion} changeLocation={this.changeLocation} />\n          <UserLocation weather={this.state.weather} />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}